/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
export class PayPalConfig {
    /**
     * @param {?} integrationType
     * @param {?} environment
     * @param {?} config
     */
    constructor(integrationType, environment, config) {
        this.integrationType = integrationType;
        this.environment = environment;
        /**
         * Show 'Pay Now' button config
         */
        this.commit = true;
        /**
         * Set the intent of the payment.
         */
        this.intent = 'sale';
        Object.assign(this, config);
    }
}
if (false) {
    /**
     * Show 'Pay Now' button config
     * @type {?}
     */
    PayPalConfig.prototype.commit;
    /**
     * Set the intent of the payment.
     * @type {?}
     */
    PayPalConfig.prototype.intent;
    /**
     * Called to create new payment for server side integration
     * @type {?}
     */
    PayPalConfig.prototype.payment;
    /**
     * Called to execute payment for server side integration
     * @type {?}
     */
    PayPalConfig.prototype.onAuthorize;
    /**
     * Client tokens for client side integration
     * @type {?}
     */
    PayPalConfig.prototype.client;
    /**
     * Array of transaction, required for client side integration
     * @type {?}
     */
    PayPalConfig.prototype.transactions;
    /**
     * Payment Experience configurations
     * @type {?}
     */
    PayPalConfig.prototype.experience;
    /**
     * Called for client side integration when payment is executed
     * @type {?}
     */
    PayPalConfig.prototype.onPaymentComplete;
    /**
     * Button configuration
     * @type {?}
     */
    PayPalConfig.prototype.button;
    /**
     * Paypal funding configuration
     * @type {?}
     */
    PayPalConfig.prototype.funding;
    /**
     * Called when PayPal experiences an error
     * @type {?}
     */
    PayPalConfig.prototype.onError;
    /**
     * This handler will be called for every click on the PayPal button
     * @type {?}
     */
    PayPalConfig.prototype.onClick;
    /**
     * Called when user cancels payment
     * @type {?}
     */
    PayPalConfig.prototype.onCancel;
    /**
     * Can be used to validation as can be seen here: https://developer.paypal.com/demo/checkout/#/pattern/validation
     * @type {?}
     */
    PayPalConfig.prototype.validate;
    /**
     * Type of the integration
     * @type {?}
     */
    PayPalConfig.prototype.integrationType;
    /**
     * Environment
     * @type {?}
     */
    PayPalConfig.prototype.environment;
}
/**
 * @record
 */
export function IPayPalPaymentCompleteData() { }
if (false) {
    /** @type {?} */
    IPayPalPaymentCompleteData.prototype.intent;
    /** @type {?} */
    IPayPalPaymentCompleteData.prototype.orderID;
    /** @type {?} */
    IPayPalPaymentCompleteData.prototype.payerID;
    /** @type {?} */
    IPayPalPaymentCompleteData.prototype.paymentID;
    /** @type {?} */
    IPayPalPaymentCompleteData.prototype.paymentToken;
    /** @type {?} */
    IPayPalPaymentCompleteData.prototype.returnUrl;
}
/**
 * @record
 */
export function IPayPalCancelPayment() { }
if (false) {
    /** @type {?} */
    IPayPalCancelPayment.prototype.data;
    /** @type {?} */
    IPayPalCancelPayment.prototype.actions;
}
/**
 * @record
 */
export function IPayPalCancelPaymentData() { }
if (false) {
    /** @type {?} */
    IPayPalCancelPaymentData.prototype.billingID;
    /** @type {?} */
    IPayPalCancelPaymentData.prototype.cancelUrl;
    /** @type {?} */
    IPayPalCancelPaymentData.prototype.intent;
    /** @type {?} */
    IPayPalCancelPaymentData.prototype.paymentID;
    /** @type {?} */
    IPayPalCancelPaymentData.prototype.paymentToken;
}
/**
 * @record
 */
export function IPaypalClient() { }
if (false) {
    /** @type {?|undefined} */
    IPaypalClient.prototype.sandbox;
    /** @type {?|undefined} */
    IPaypalClient.prototype.production;
}
/**
 * @record
 */
export function IPayPalTransaction() { }
if (false) {
    /** @type {?} */
    IPayPalTransaction.prototype.amount;
    /** @type {?|undefined} */
    IPayPalTransaction.prototype.description;
    /** @type {?|undefined} */
    IPayPalTransaction.prototype.custom;
    /** @type {?|undefined} */
    IPayPalTransaction.prototype.payment_options;
    /** @type {?|undefined} */
    IPayPalTransaction.prototype.invoice_number;
    /** @type {?|undefined} */
    IPayPalTransaction.prototype.soft_descriptor;
    /** @type {?|undefined} */
    IPayPalTransaction.prototype.item_list;
}
/**
 * @record
 */
export function IPayPalTransactionItemList() { }
if (false) {
    /** @type {?|undefined} */
    IPayPalTransactionItemList.prototype.items;
    /** @type {?|undefined} */
    IPayPalTransactionItemList.prototype.shipping_address;
}
/**
 * @record
 */
export function IPayPalTransactionItem() { }
if (false) {
    /** @type {?} */
    IPayPalTransactionItem.prototype.name;
    /** @type {?} */
    IPayPalTransactionItem.prototype.currency;
    /** @type {?} */
    IPayPalTransactionItem.prototype.price;
    /** @type {?} */
    IPayPalTransactionItem.prototype.quantity;
    /** @type {?|undefined} */
    IPayPalTransactionItem.prototype.description;
    /** @type {?|undefined} */
    IPayPalTransactionItem.prototype.tax;
    /** @type {?|undefined} */
    IPayPalTransactionItem.prototype.sku;
}
/**
 * @record
 */
export function IPayPalAmount() { }
if (false) {
    /** @type {?} */
    IPayPalAmount.prototype.total;
    /** @type {?} */
    IPayPalAmount.prototype.currency;
    /** @type {?|undefined} */
    IPayPalAmount.prototype.details;
}
/**
 * @record
 */
export function IPayPalTransactionShippingAddress() { }
if (false) {
    /** @type {?} */
    IPayPalTransactionShippingAddress.prototype.recipient_name;
    /** @type {?} */
    IPayPalTransactionShippingAddress.prototype.line1;
    /** @type {?|undefined} */
    IPayPalTransactionShippingAddress.prototype.line2;
    /** @type {?} */
    IPayPalTransactionShippingAddress.prototype.city;
    /** @type {?} */
    IPayPalTransactionShippingAddress.prototype.country_code;
    /** @type {?} */
    IPayPalTransactionShippingAddress.prototype.postal_code;
    /** @type {?} */
    IPayPalTransactionShippingAddress.prototype.phone;
    /** @type {?} */
    IPayPalTransactionShippingAddress.prototype.state;
}
/**
 * @record
 */
export function IPayPalAmountDetails() { }
if (false) {
    /** @type {?} */
    IPayPalAmountDetails.prototype.subtotal;
    /** @type {?} */
    IPayPalAmountDetails.prototype.tax;
    /** @type {?} */
    IPayPalAmountDetails.prototype.shipping;
    /** @type {?} */
    IPayPalAmountDetails.prototype.handling_fee;
    /** @type {?} */
    IPayPalAmountDetails.prototype.shipping_discount;
    /** @type {?} */
    IPayPalAmountDetails.prototype.insurance;
}
/**
 * @record
 */
export function IPayPalTransactionPaymentOptions() { }
if (false) {
    /** @type {?|undefined} */
    IPayPalTransactionPaymentOptions.prototype.allowed_payment_method;
}
/**
 * @record
 */
export function IPayPalExperience() { }
if (false) {
    /**
     * Indicates whether PayPal displays shipping address fields on the experience pages
     * @type {?|undefined}
     */
    IPayPalExperience.prototype.noShipping;
    /**
     * A label that overrides the business name in the PayPal account on the PayPal pages. Max length: 127 characters.
     * @type {?|undefined}
     */
    IPayPalExperience.prototype.brandName;
    /**
     * URL to the logo image (gif, jpg, or png). The image's maximum width is 190 pixels and maximum height is 60 pixels.
     * @type {?|undefined}
     */
    IPayPalExperience.prototype.logoImage;
    /**
     * Locale in which to display PayPal page
     * @type {?|undefined}
     */
    IPayPalExperience.prototype.localeCode;
}
/**
 * @record
 */
export function IPayPalButtonStyle() { }
if (false) {
    /** @type {?|undefined} */
    IPayPalButtonStyle.prototype.label;
    /** @type {?|undefined} */
    IPayPalButtonStyle.prototype.size;
    /** @type {?|undefined} */
    IPayPalButtonStyle.prototype.shape;
    /** @type {?|undefined} */
    IPayPalButtonStyle.prototype.color;
    /** @type {?|undefined} */
    IPayPalButtonStyle.prototype.layout;
    /** @type {?|undefined} */
    IPayPalButtonStyle.prototype.tagline;
    /** @type {?|undefined} */
    IPayPalButtonStyle.prototype.fundingicons;
    /** @type {?|undefined} */
    IPayPalButtonStyle.prototype.branding;
}
/**
 * @record
 */
export function IPayPalFunding() { }
if (false) {
    /** @type {?} */
    IPayPalFunding.prototype.allowed;
    /** @type {?} */
    IPayPalFunding.prototype.disallowed;
}
//# sourceMappingURL=data:application/json;base64,